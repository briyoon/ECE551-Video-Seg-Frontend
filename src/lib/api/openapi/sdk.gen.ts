// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from './client';
import type { ListProjectsApiV1ProjectsGetData, ListProjectsApiV1ProjectsGetResponses, CreateProjectApiV1ProjectsPostData, CreateProjectApiV1ProjectsPostResponses, CreateProjectApiV1ProjectsPostErrors, DeleteProjectApiV1ProjectsPidDeleteData, DeleteProjectApiV1ProjectsPidDeleteResponses, DeleteProjectApiV1ProjectsPidDeleteErrors, GetProjectApiV1ProjectsPidGetData, GetProjectApiV1ProjectsPidGetResponses, GetProjectApiV1ProjectsPidGetErrors, UpdateProjectApiV1ProjectsPidPatchData, UpdateProjectApiV1ProjectsPidPatchResponses, UpdateProjectApiV1ProjectsPidPatchErrors, ProjectEventsApiV1ProjectsPidEventsGetData, ProjectEventsApiV1ProjectsPidEventsGetResponses, ProjectEventsApiV1ProjectsPidEventsGetErrors, ListMediaApiV1ProjectsPidMediaGetData, ListMediaApiV1ProjectsPidMediaGetResponses, ListMediaApiV1ProjectsPidMediaGetErrors, AddMediaApiV1ProjectsPidMediaPostData, AddMediaApiV1ProjectsPidMediaPostResponses, AddMediaApiV1ProjectsPidMediaPostErrors, DeleteMediaApiV1ProjectsPidMediaMidDeleteData, DeleteMediaApiV1ProjectsPidMediaMidDeleteResponses, DeleteMediaApiV1ProjectsPidMediaMidDeleteErrors, GetMediaApiV1ProjectsPidMediaMidGetData, GetMediaApiV1ProjectsPidMediaMidGetResponses, GetMediaApiV1ProjectsPidMediaMidGetErrors, ListModelsApiV1ModelsGetData, ListModelsApiV1ModelsGetResponses, ListImagePromptsApiV1ProjectsPidPromptsImageGetData, ListImagePromptsApiV1ProjectsPidPromptsImageGetResponses, ListImagePromptsApiV1ProjectsPidPromptsImageGetErrors, AddImagePromptApiV1ProjectsPidPromptsImagePostData, AddImagePromptApiV1ProjectsPidPromptsImagePostResponses, AddImagePromptApiV1ProjectsPidPromptsImagePostErrors, DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteData, DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteResponses, DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteErrors, ListVideoPromptsApiV1ProjectsPidPromptsVideoGetData, ListVideoPromptsApiV1ProjectsPidPromptsVideoGetResponses, ListVideoPromptsApiV1ProjectsPidPromptsVideoGetErrors, AddVideoPromptApiV1ProjectsPidPromptsVideoPostData, AddVideoPromptApiV1ProjectsPidPromptsVideoPostResponses, AddVideoPromptApiV1ProjectsPidPromptsVideoPostErrors, DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteData, DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteResponses, DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteErrors, ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetData, ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetResponses, ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetErrors, GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetData, GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetResponses, GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetErrors, ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetData, ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetResponses, ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetErrors, GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetData, GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetResponses, GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetErrors, ListLabelsApiV1ProjectsPidLabelsGetData, ListLabelsApiV1ProjectsPidLabelsGetResponses, ListLabelsApiV1ProjectsPidLabelsGetErrors, CreateLabelApiV1ProjectsPidLabelsPostData, CreateLabelApiV1ProjectsPidLabelsPostResponses, CreateLabelApiV1ProjectsPidLabelsPostErrors, DeleteLabelApiV1ProjectsPidLabelsLidDeleteData, DeleteLabelApiV1ProjectsPidLabelsLidDeleteResponses, DeleteLabelApiV1ProjectsPidLabelsLidDeleteErrors, UpdateLabelApiV1ProjectsPidLabelsLidPatchData, UpdateLabelApiV1ProjectsPidLabelsLidPatchResponses, UpdateLabelApiV1ProjectsPidLabelsLidPatchErrors, ExportProjectApiV1ProjectsPidExportGetData, ExportProjectApiV1ProjectsPidExportGetResponses, ExportProjectApiV1ProjectsPidExportGetErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * List Projects
 */
export const listProjectsApiV1ProjectsGet = <ThrowOnError extends boolean = false>(options?: Options<ListProjectsApiV1ProjectsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListProjectsApiV1ProjectsGetResponses, unknown, ThrowOnError>({
        url: '/api/v1/projects',
        ...options
    });
};

/**
 * Create Project
 */
export const createProjectApiV1ProjectsPost = <ThrowOnError extends boolean = false>(options: Options<CreateProjectApiV1ProjectsPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateProjectApiV1ProjectsPostResponses, CreateProjectApiV1ProjectsPostErrors, ThrowOnError>({
        url: '/api/v1/projects',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Project
 */
export const deleteProjectApiV1ProjectsPidDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteProjectApiV1ProjectsPidDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteProjectApiV1ProjectsPidDeleteResponses, DeleteProjectApiV1ProjectsPidDeleteErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}',
        ...options
    });
};

/**
 * Get Project
 */
export const getProjectApiV1ProjectsPidGet = <ThrowOnError extends boolean = false>(options: Options<GetProjectApiV1ProjectsPidGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetProjectApiV1ProjectsPidGetResponses, GetProjectApiV1ProjectsPidGetErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}',
        ...options
    });
};

/**
 * Update Project
 */
export const updateProjectApiV1ProjectsPidPatch = <ThrowOnError extends boolean = false>(options: Options<UpdateProjectApiV1ProjectsPidPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<UpdateProjectApiV1ProjectsPidPatchResponses, UpdateProjectApiV1ProjectsPidPatchErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Project Events
 * One SSE stream per project.
 * Yields JSON payloads (see top-of-file docstring).
 */
export const projectEventsApiV1ProjectsPidEventsGet = <ThrowOnError extends boolean = false>(options: Options<ProjectEventsApiV1ProjectsPidEventsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ProjectEventsApiV1ProjectsPidEventsGetResponses, ProjectEventsApiV1ProjectsPidEventsGetErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/events',
        ...options
    });
};

/**
 * List Media
 */
export const listMediaApiV1ProjectsPidMediaGet = <ThrowOnError extends boolean = false>(options: Options<ListMediaApiV1ProjectsPidMediaGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListMediaApiV1ProjectsPidMediaGetResponses, ListMediaApiV1ProjectsPidMediaGetErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/media',
        ...options
    });
};

/**
 * Add Media
 */
export const addMediaApiV1ProjectsPidMediaPost = <ThrowOnError extends boolean = false>(options: Options<AddMediaApiV1ProjectsPidMediaPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddMediaApiV1ProjectsPidMediaPostResponses, AddMediaApiV1ProjectsPidMediaPostErrors, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/v1/projects/{pid}/media',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Delete Media
 */
export const deleteMediaApiV1ProjectsPidMediaMidDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteMediaApiV1ProjectsPidMediaMidDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteMediaApiV1ProjectsPidMediaMidDeleteResponses, DeleteMediaApiV1ProjectsPidMediaMidDeleteErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/media/{mid}',
        ...options
    });
};

/**
 * Get Media
 */
export const getMediaApiV1ProjectsPidMediaMidGet = <ThrowOnError extends boolean = false>(options: Options<GetMediaApiV1ProjectsPidMediaMidGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMediaApiV1ProjectsPidMediaMidGetResponses, GetMediaApiV1ProjectsPidMediaMidGetErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/media/{mid}',
        ...options
    });
};

/**
 * List Models
 */
export const listModelsApiV1ModelsGet = <ThrowOnError extends boolean = false>(options?: Options<ListModelsApiV1ModelsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListModelsApiV1ModelsGetResponses, unknown, ThrowOnError>({
        url: '/api/v1/models',
        ...options
    });
};

/**
 * List Image Prompts
 */
export const listImagePromptsApiV1ProjectsPidPromptsImageGet = <ThrowOnError extends boolean = false>(options: Options<ListImagePromptsApiV1ProjectsPidPromptsImageGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListImagePromptsApiV1ProjectsPidPromptsImageGetResponses, ListImagePromptsApiV1ProjectsPidPromptsImageGetErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/prompts/image',
        ...options
    });
};

/**
 * Add Image Prompt
 */
export const addImagePromptApiV1ProjectsPidPromptsImagePost = <ThrowOnError extends boolean = false>(options: Options<AddImagePromptApiV1ProjectsPidPromptsImagePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddImagePromptApiV1ProjectsPidPromptsImagePostResponses, AddImagePromptApiV1ProjectsPidPromptsImagePostErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/prompts/image',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Image Prompt
 */
export const deleteImagePromptApiV1ProjectsPidPromptsImageAidDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteResponses, DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/prompts/image/{aid}',
        ...options
    });
};

/**
 * List Video Prompts
 */
export const listVideoPromptsApiV1ProjectsPidPromptsVideoGet = <ThrowOnError extends boolean = false>(options: Options<ListVideoPromptsApiV1ProjectsPidPromptsVideoGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListVideoPromptsApiV1ProjectsPidPromptsVideoGetResponses, ListVideoPromptsApiV1ProjectsPidPromptsVideoGetErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/prompts/video',
        ...options
    });
};

/**
 * Add Video Prompt
 */
export const addVideoPromptApiV1ProjectsPidPromptsVideoPost = <ThrowOnError extends boolean = false>(options: Options<AddVideoPromptApiV1ProjectsPidPromptsVideoPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddVideoPromptApiV1ProjectsPidPromptsVideoPostResponses, AddVideoPromptApiV1ProjectsPidPromptsVideoPostErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/prompts/video',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Video Prompt
 */
export const deleteVideoPromptApiV1ProjectsPidPromptsVideoAidDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteResponses, DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/prompts/video/{aid}',
        ...options
    });
};

/**
 * List Image Annotations
 */
export const listImageAnnotationsApiV1ProjectsPidAnnotationsImageGet = <ThrowOnError extends boolean = false>(options: Options<ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetResponses, ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/annotations/image/',
        ...options
    });
};

/**
 * Get Image Annotation
 */
export const getImageAnnotationApiV1ProjectsPidAnnotationsImageMidGet = <ThrowOnError extends boolean = false>(options: Options<GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetResponses, GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/annotations/image/{mid}',
        ...options
    });
};

/**
 * List Video Annotations
 */
export const listVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGet = <ThrowOnError extends boolean = false>(options: Options<ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetResponses, ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/annotations/video/',
        ...options
    });
};

/**
 * Get Video Annotation
 */
export const getVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGet = <ThrowOnError extends boolean = false>(options: Options<GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetResponses, GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/annotations/video/{mid}',
        ...options
    });
};

/**
 * List Labels
 */
export const listLabelsApiV1ProjectsPidLabelsGet = <ThrowOnError extends boolean = false>(options: Options<ListLabelsApiV1ProjectsPidLabelsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListLabelsApiV1ProjectsPidLabelsGetResponses, ListLabelsApiV1ProjectsPidLabelsGetErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/labels',
        ...options
    });
};

/**
 * Create Label
 */
export const createLabelApiV1ProjectsPidLabelsPost = <ThrowOnError extends boolean = false>(options: Options<CreateLabelApiV1ProjectsPidLabelsPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateLabelApiV1ProjectsPidLabelsPostResponses, CreateLabelApiV1ProjectsPidLabelsPostErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/labels',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Label
 */
export const deleteLabelApiV1ProjectsPidLabelsLidDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteLabelApiV1ProjectsPidLabelsLidDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteLabelApiV1ProjectsPidLabelsLidDeleteResponses, DeleteLabelApiV1ProjectsPidLabelsLidDeleteErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/labels/{lid}',
        ...options
    });
};

/**
 * Update Label
 */
export const updateLabelApiV1ProjectsPidLabelsLidPatch = <ThrowOnError extends boolean = false>(options: Options<UpdateLabelApiV1ProjectsPidLabelsLidPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<UpdateLabelApiV1ProjectsPidLabelsLidPatchResponses, UpdateLabelApiV1ProjectsPidLabelsLidPatchErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/labels/{lid}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Export Project
 */
export const exportProjectApiV1ProjectsPidExportGet = <ThrowOnError extends boolean = false>(options: Options<ExportProjectApiV1ProjectsPidExportGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ExportProjectApiV1ProjectsPidExportGetResponses, ExportProjectApiV1ProjectsPidExportGetErrors, ThrowOnError>({
        url: '/api/v1/projects/{pid}/export',
        ...options
    });
};