// This file is auto-generated by @hey-api/openapi-ts

/**
 * Body_add_media_api_v1_projects__pid__media_post
 */
export type BodyAddMediaApiV1ProjectsPidMediaPost = {
    /**
     * File
     */
    file: Blob | File;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * ImageAnnotationRead
 */
export type ImageAnnotationRead = {
    /**
     * Id
     */
    id: number;
    /**
     * Prompt Id
     */
    prompt_id: number;
    /**
     * Project Id
     */
    project_id: number | null;
    /**
     * Media Id
     */
    media_id: number;
    /**
     * Label Id
     */
    label_id: number;
    model_id: ModelKeys | null;
    /**
     * Mask Rle
     */
    mask_rle: string | null;
};

/**
 * ImagePromptCreate
 */
export type ImagePromptCreate = {
    /**
     * Media Id
     */
    media_id: number;
    /**
     * Label Id
     */
    label_id: number;
    /**
     * X
     */
    x: number;
    /**
     * Y
     */
    y: number;
    /**
     * Click Label
     */
    click_label: number;
};

/**
 * ImagePromptRead
 */
export type ImagePromptRead = {
    /**
     * Media Id
     */
    media_id: number;
    /**
     * Label Id
     */
    label_id: number;
    /**
     * X
     */
    x: number;
    /**
     * Y
     */
    y: number;
    /**
     * Click Label
     */
    click_label: number;
    /**
     * Id
     */
    id: number;
    /**
     * Project Id
     */
    project_id: number;
};

/**
 * LabelCreate
 */
export type LabelCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Color
     * Hex colour code, with or without leading #
     */
    color?: string | null;
};

/**
 * LabelRead
 */
export type LabelRead = {
    /**
     * Name
     */
    name: string;
    /**
     * Id
     */
    id: number;
    /**
     * Project Id
     */
    project_id: number;
    /**
     * Color
     */
    color: string;
};

/**
 * LabelUpdate
 */
export type LabelUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Color
     */
    color?: string | null;
};

/**
 * MediaRead
 */
export type MediaRead = {
    /**
     * Id
     */
    id: number;
    /**
     * Path
     */
    path: string;
    /**
     * Media Type
     */
    media_type: 'image' | 'video';
    /**
     * Height
     */
    height: number;
    /**
     * Width
     */
    width: number;
    /**
     * Fps
     */
    fps?: number | null;
    /**
     * Prompt Count
     */
    prompt_count: number;
};

/**
 * ModelKeys
 */
export type ModelKeys = 'sam2.1_hiera_tiny' | 'sam2.1_hiera_small' | 'sam2.1_hiera_base+' | 'sam2.1_hiera_large';

/**
 * ProjectCreate
 */
export type ProjectCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Media Type
     */
    media_type: 'image' | 'video';
};

/**
 * ProjectRead
 */
export type ProjectRead = {
    /**
     * Name
     */
    name: string;
    /**
     * Media Type
     */
    media_type: 'image' | 'video';
    /**
     * Id
     */
    id: number;
    default_model_id: ModelKeys;
};

/**
 * ProjectUpdate
 */
export type ProjectUpdate = {
    /**
     * Name
     */
    name?: string | null;
    default_model_id: ModelKeys;
};

/**
 * QueueMsg
 */
export type QueueMsg = {
    /**
     * Detail
     */
    detail?: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

/**
 * VideoAnnotationRead
 */
export type VideoAnnotationRead = {
    /**
     * Id
     */
    id: number;
    /**
     * Prompt Id
     */
    prompt_id: number;
    /**
     * Project Id
     */
    project_id: number | null;
    /**
     * Media Id
     */
    media_id: number;
    /**
     * Frame Idx
     */
    frame_idx: number;
    /**
     * Obj Idx
     */
    obj_idx: number;
    model_id: ModelKeys | null;
    /**
     * Mask Rle
     */
    mask_rle: string | null;
};

/**
 * VideoPromptCreate
 */
export type VideoPromptCreate = {
    /**
     * Media Id
     */
    media_id: number;
    /**
     * Label Id
     */
    label_id: number;
    /**
     * Frame Idx
     */
    frame_idx: number;
    /**
     * Obj Idx
     */
    obj_idx: number;
    /**
     * X
     */
    x: number;
    /**
     * Y
     */
    y: number;
    /**
     * Click Label
     */
    click_label: number;
};

/**
 * VideoPromptRead
 */
export type VideoPromptRead = {
    /**
     * Media Id
     */
    media_id: number;
    /**
     * Label Id
     */
    label_id: number;
    /**
     * Frame Idx
     */
    frame_idx: number;
    /**
     * Obj Idx
     */
    obj_idx: number;
    /**
     * X
     */
    x: number;
    /**
     * Y
     */
    y: number;
    /**
     * Click Label
     */
    click_label: number;
    /**
     * Id
     */
    id: number;
};

export type ListProjectsApiV1ProjectsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/projects';
};

export type ListProjectsApiV1ProjectsGetResponses = {
    /**
     * Response List Projects Api V1 Projects Get
     * Successful Response
     */
    200: Array<ProjectRead>;
};

export type ListProjectsApiV1ProjectsGetResponse = ListProjectsApiV1ProjectsGetResponses[keyof ListProjectsApiV1ProjectsGetResponses];

export type CreateProjectApiV1ProjectsPostData = {
    body: ProjectCreate;
    path?: never;
    query?: never;
    url: '/api/v1/projects';
};

export type CreateProjectApiV1ProjectsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateProjectApiV1ProjectsPostError = CreateProjectApiV1ProjectsPostErrors[keyof CreateProjectApiV1ProjectsPostErrors];

export type CreateProjectApiV1ProjectsPostResponses = {
    /**
     * Successful Response
     */
    200: ProjectRead;
};

export type CreateProjectApiV1ProjectsPostResponse = CreateProjectApiV1ProjectsPostResponses[keyof CreateProjectApiV1ProjectsPostResponses];

export type DeleteProjectApiV1ProjectsPidDeleteData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}';
};

export type DeleteProjectApiV1ProjectsPidDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteProjectApiV1ProjectsPidDeleteError = DeleteProjectApiV1ProjectsPidDeleteErrors[keyof DeleteProjectApiV1ProjectsPidDeleteErrors];

export type DeleteProjectApiV1ProjectsPidDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteProjectApiV1ProjectsPidDeleteResponse = DeleteProjectApiV1ProjectsPidDeleteResponses[keyof DeleteProjectApiV1ProjectsPidDeleteResponses];

export type GetProjectApiV1ProjectsPidGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}';
};

export type GetProjectApiV1ProjectsPidGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetProjectApiV1ProjectsPidGetError = GetProjectApiV1ProjectsPidGetErrors[keyof GetProjectApiV1ProjectsPidGetErrors];

export type GetProjectApiV1ProjectsPidGetResponses = {
    /**
     * Successful Response
     */
    200: ProjectRead;
};

export type GetProjectApiV1ProjectsPidGetResponse = GetProjectApiV1ProjectsPidGetResponses[keyof GetProjectApiV1ProjectsPidGetResponses];

export type UpdateProjectApiV1ProjectsPidPatchData = {
    body: ProjectUpdate;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}';
};

export type UpdateProjectApiV1ProjectsPidPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateProjectApiV1ProjectsPidPatchError = UpdateProjectApiV1ProjectsPidPatchErrors[keyof UpdateProjectApiV1ProjectsPidPatchErrors];

export type UpdateProjectApiV1ProjectsPidPatchResponses = {
    /**
     * Successful Response
     */
    200: ProjectRead;
};

export type UpdateProjectApiV1ProjectsPidPatchResponse = UpdateProjectApiV1ProjectsPidPatchResponses[keyof UpdateProjectApiV1ProjectsPidPatchResponses];

export type ProjectEventsApiV1ProjectsPidEventsGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/events';
};

export type ProjectEventsApiV1ProjectsPidEventsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ProjectEventsApiV1ProjectsPidEventsGetError = ProjectEventsApiV1ProjectsPidEventsGetErrors[keyof ProjectEventsApiV1ProjectsPidEventsGetErrors];

export type ProjectEventsApiV1ProjectsPidEventsGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ListMediaApiV1ProjectsPidMediaGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/media';
};

export type ListMediaApiV1ProjectsPidMediaGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListMediaApiV1ProjectsPidMediaGetError = ListMediaApiV1ProjectsPidMediaGetErrors[keyof ListMediaApiV1ProjectsPidMediaGetErrors];

export type ListMediaApiV1ProjectsPidMediaGetResponses = {
    /**
     * Response List Media Api V1 Projects  Pid  Media Get
     * Successful Response
     */
    200: Array<MediaRead>;
};

export type ListMediaApiV1ProjectsPidMediaGetResponse = ListMediaApiV1ProjectsPidMediaGetResponses[keyof ListMediaApiV1ProjectsPidMediaGetResponses];

export type AddMediaApiV1ProjectsPidMediaPostData = {
    body: BodyAddMediaApiV1ProjectsPidMediaPost;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/media';
};

export type AddMediaApiV1ProjectsPidMediaPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddMediaApiV1ProjectsPidMediaPostError = AddMediaApiV1ProjectsPidMediaPostErrors[keyof AddMediaApiV1ProjectsPidMediaPostErrors];

export type AddMediaApiV1ProjectsPidMediaPostResponses = {
    /**
     * Successful Response
     */
    200: MediaRead;
};

export type AddMediaApiV1ProjectsPidMediaPostResponse = AddMediaApiV1ProjectsPidMediaPostResponses[keyof AddMediaApiV1ProjectsPidMediaPostResponses];

export type DeleteMediaApiV1ProjectsPidMediaMidDeleteData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
        /**
         * Mid
         */
        mid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/media/{mid}';
};

export type DeleteMediaApiV1ProjectsPidMediaMidDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteMediaApiV1ProjectsPidMediaMidDeleteError = DeleteMediaApiV1ProjectsPidMediaMidDeleteErrors[keyof DeleteMediaApiV1ProjectsPidMediaMidDeleteErrors];

export type DeleteMediaApiV1ProjectsPidMediaMidDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteMediaApiV1ProjectsPidMediaMidDeleteResponse = DeleteMediaApiV1ProjectsPidMediaMidDeleteResponses[keyof DeleteMediaApiV1ProjectsPidMediaMidDeleteResponses];

export type GetMediaApiV1ProjectsPidMediaMidGetData = {
    body?: never;
    path: {
        /**
         * Mid
         */
        mid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/media/{mid}';
};

export type GetMediaApiV1ProjectsPidMediaMidGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMediaApiV1ProjectsPidMediaMidGetError = GetMediaApiV1ProjectsPidMediaMidGetErrors[keyof GetMediaApiV1ProjectsPidMediaMidGetErrors];

export type GetMediaApiV1ProjectsPidMediaMidGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ListModelsApiV1ModelsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/models';
};

export type ListModelsApiV1ModelsGetResponses = {
    /**
     * Response List Models Api V1 Models Get
     * Successful Response
     */
    200: Array<string>;
};

export type ListModelsApiV1ModelsGetResponse = ListModelsApiV1ModelsGetResponses[keyof ListModelsApiV1ModelsGetResponses];

export type ListImagePromptsApiV1ProjectsPidPromptsImageGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: {
        /**
         * Media Id
         * Filter by media_id
         */
        media_id?: number | null;
    };
    url: '/api/v1/projects/{pid}/prompts/image';
};

export type ListImagePromptsApiV1ProjectsPidPromptsImageGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListImagePromptsApiV1ProjectsPidPromptsImageGetError = ListImagePromptsApiV1ProjectsPidPromptsImageGetErrors[keyof ListImagePromptsApiV1ProjectsPidPromptsImageGetErrors];

export type ListImagePromptsApiV1ProjectsPidPromptsImageGetResponses = {
    /**
     * Response List Image Prompts Api V1 Projects  Pid  Prompts Image Get
     * Successful Response
     */
    200: Array<ImagePromptRead>;
};

export type ListImagePromptsApiV1ProjectsPidPromptsImageGetResponse = ListImagePromptsApiV1ProjectsPidPromptsImageGetResponses[keyof ListImagePromptsApiV1ProjectsPidPromptsImageGetResponses];

export type AddImagePromptApiV1ProjectsPidPromptsImagePostData = {
    body: ImagePromptCreate;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: {
        /**
         * Model Key
         */
        model_key?: string | null;
    };
    url: '/api/v1/projects/{pid}/prompts/image';
};

export type AddImagePromptApiV1ProjectsPidPromptsImagePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddImagePromptApiV1ProjectsPidPromptsImagePostError = AddImagePromptApiV1ProjectsPidPromptsImagePostErrors[keyof AddImagePromptApiV1ProjectsPidPromptsImagePostErrors];

export type AddImagePromptApiV1ProjectsPidPromptsImagePostResponses = {
    /**
     * Successful Response
     */
    202: QueueMsg;
};

export type AddImagePromptApiV1ProjectsPidPromptsImagePostResponse = AddImagePromptApiV1ProjectsPidPromptsImagePostResponses[keyof AddImagePromptApiV1ProjectsPidPromptsImagePostResponses];

export type DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
        /**
         * Aid
         */
        aid: number;
    };
    query?: {
        /**
         * Model Key
         */
        model_key?: string | null;
    };
    url: '/api/v1/projects/{pid}/prompts/image/{aid}';
};

export type DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteError = DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteErrors[keyof DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteErrors];

export type DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteResponses = {
    /**
     * Successful Response
     */
    202: QueueMsg;
};

export type DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteResponse = DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteResponses[keyof DeleteImagePromptApiV1ProjectsPidPromptsImageAidDeleteResponses];

export type ListVideoPromptsApiV1ProjectsPidPromptsVideoGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: {
        /**
         * Media Id
         */
        media_id?: number | null;
        /**
         * Obj Idx
         */
        obj_idx?: number | null;
        /**
         * Frame Idx
         */
        frame_idx?: number | null;
    };
    url: '/api/v1/projects/{pid}/prompts/video';
};

export type ListVideoPromptsApiV1ProjectsPidPromptsVideoGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListVideoPromptsApiV1ProjectsPidPromptsVideoGetError = ListVideoPromptsApiV1ProjectsPidPromptsVideoGetErrors[keyof ListVideoPromptsApiV1ProjectsPidPromptsVideoGetErrors];

export type ListVideoPromptsApiV1ProjectsPidPromptsVideoGetResponses = {
    /**
     * Response List Video Prompts Api V1 Projects  Pid  Prompts Video Get
     * Successful Response
     */
    200: Array<VideoPromptRead>;
};

export type ListVideoPromptsApiV1ProjectsPidPromptsVideoGetResponse = ListVideoPromptsApiV1ProjectsPidPromptsVideoGetResponses[keyof ListVideoPromptsApiV1ProjectsPidPromptsVideoGetResponses];

export type AddVideoPromptApiV1ProjectsPidPromptsVideoPostData = {
    body: VideoPromptCreate;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/prompts/video';
};

export type AddVideoPromptApiV1ProjectsPidPromptsVideoPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddVideoPromptApiV1ProjectsPidPromptsVideoPostError = AddVideoPromptApiV1ProjectsPidPromptsVideoPostErrors[keyof AddVideoPromptApiV1ProjectsPidPromptsVideoPostErrors];

export type AddVideoPromptApiV1ProjectsPidPromptsVideoPostResponses = {
    /**
     * Successful Response
     */
    202: QueueMsg;
};

export type AddVideoPromptApiV1ProjectsPidPromptsVideoPostResponse = AddVideoPromptApiV1ProjectsPidPromptsVideoPostResponses[keyof AddVideoPromptApiV1ProjectsPidPromptsVideoPostResponses];

export type DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
        /**
         * Aid
         */
        aid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/prompts/video/{aid}';
};

export type DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteError = DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteErrors[keyof DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteErrors];

export type DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteResponses = {
    /**
     * Successful Response
     */
    202: QueueMsg;
};

export type DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteResponse = DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteResponses[keyof DeleteVideoPromptApiV1ProjectsPidPromptsVideoAidDeleteResponses];

export type ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/annotations/image/';
};

export type ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetError = ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetErrors[keyof ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetErrors];

export type ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetResponses = {
    /**
     * Response List Image Annotations Api V1 Projects  Pid  Annotations Image  Get
     * Successful Response
     */
    200: Array<ImageAnnotationRead>;
};

export type ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetResponse = ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetResponses[keyof ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetResponses];

export type GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
        /**
         * Mid
         */
        mid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/annotations/image/{mid}';
};

export type GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetError = GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetErrors[keyof GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetErrors];

export type GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetResponses = {
    /**
     * Response Get Image Annotation Api V1 Projects  Pid  Annotations Image  Mid  Get
     * Successful Response
     */
    200: Array<ImageAnnotationRead>;
};

export type GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetResponse = GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetResponses[keyof GetImageAnnotationApiV1ProjectsPidAnnotationsImageMidGetResponses];

export type ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/annotations/video/';
};

export type ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetError = ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetErrors[keyof ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetErrors];

export type ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetResponses = {
    /**
     * Response List Video Annotations Api V1 Projects  Pid  Annotations Video  Get
     * Successful Response
     */
    200: Array<VideoAnnotationRead>;
};

export type ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetResponse = ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetResponses[keyof ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetResponses];

export type GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
        /**
         * Mid
         */
        mid: number;
    };
    query?: {
        /**
         * Frame Idx
         */
        frame_idx?: number | null;
        /**
         * Obj Idx
         */
        obj_idx?: number | null;
    };
    url: '/api/v1/projects/{pid}/annotations/video/{mid}';
};

export type GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetError = GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetErrors[keyof GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetErrors];

export type GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetResponses = {
    /**
     * Response Get Video Annotation Api V1 Projects  Pid  Annotations Video  Mid  Get
     * Successful Response
     */
    200: Array<VideoAnnotationRead>;
};

export type GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetResponse = GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetResponses[keyof GetVideoAnnotationApiV1ProjectsPidAnnotationsVideoMidGetResponses];

export type ListLabelsApiV1ProjectsPidLabelsGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/labels';
};

export type ListLabelsApiV1ProjectsPidLabelsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListLabelsApiV1ProjectsPidLabelsGetError = ListLabelsApiV1ProjectsPidLabelsGetErrors[keyof ListLabelsApiV1ProjectsPidLabelsGetErrors];

export type ListLabelsApiV1ProjectsPidLabelsGetResponses = {
    /**
     * Response List Labels Api V1 Projects  Pid  Labels Get
     * Successful Response
     */
    200: Array<LabelRead>;
};

export type ListLabelsApiV1ProjectsPidLabelsGetResponse = ListLabelsApiV1ProjectsPidLabelsGetResponses[keyof ListLabelsApiV1ProjectsPidLabelsGetResponses];

export type CreateLabelApiV1ProjectsPidLabelsPostData = {
    body: LabelCreate;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/labels';
};

export type CreateLabelApiV1ProjectsPidLabelsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateLabelApiV1ProjectsPidLabelsPostError = CreateLabelApiV1ProjectsPidLabelsPostErrors[keyof CreateLabelApiV1ProjectsPidLabelsPostErrors];

export type CreateLabelApiV1ProjectsPidLabelsPostResponses = {
    /**
     * Successful Response
     */
    200: LabelRead;
};

export type CreateLabelApiV1ProjectsPidLabelsPostResponse = CreateLabelApiV1ProjectsPidLabelsPostResponses[keyof CreateLabelApiV1ProjectsPidLabelsPostResponses];

export type DeleteLabelApiV1ProjectsPidLabelsLidDeleteData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
        /**
         * Lid
         */
        lid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/labels/{lid}';
};

export type DeleteLabelApiV1ProjectsPidLabelsLidDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteLabelApiV1ProjectsPidLabelsLidDeleteError = DeleteLabelApiV1ProjectsPidLabelsLidDeleteErrors[keyof DeleteLabelApiV1ProjectsPidLabelsLidDeleteErrors];

export type DeleteLabelApiV1ProjectsPidLabelsLidDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteLabelApiV1ProjectsPidLabelsLidDeleteResponse = DeleteLabelApiV1ProjectsPidLabelsLidDeleteResponses[keyof DeleteLabelApiV1ProjectsPidLabelsLidDeleteResponses];

export type UpdateLabelApiV1ProjectsPidLabelsLidPatchData = {
    body: LabelUpdate;
    path: {
        /**
         * Pid
         */
        pid: number;
        /**
         * Lid
         */
        lid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/labels/{lid}';
};

export type UpdateLabelApiV1ProjectsPidLabelsLidPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateLabelApiV1ProjectsPidLabelsLidPatchError = UpdateLabelApiV1ProjectsPidLabelsLidPatchErrors[keyof UpdateLabelApiV1ProjectsPidLabelsLidPatchErrors];

export type UpdateLabelApiV1ProjectsPidLabelsLidPatchResponses = {
    /**
     * Successful Response
     */
    200: LabelRead;
};

export type UpdateLabelApiV1ProjectsPidLabelsLidPatchResponse = UpdateLabelApiV1ProjectsPidLabelsLidPatchResponses[keyof UpdateLabelApiV1ProjectsPidLabelsLidPatchResponses];

export type ExportProjectApiV1ProjectsPidExportGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/export';
};

export type ExportProjectApiV1ProjectsPidExportGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ExportProjectApiV1ProjectsPidExportGetError = ExportProjectApiV1ProjectsPidExportGetErrors[keyof ExportProjectApiV1ProjectsPidExportGetErrors];

export type ExportProjectApiV1ProjectsPidExportGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: `${string}://static` | (string & {});
};