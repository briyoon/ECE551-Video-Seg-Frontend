// This file is auto-generated by @hey-api/openapi-ts

/**
 * Body_add_media_api_v1_projects__pid__media_post
 */
export type BodyAddMediaApiV1ProjectsPidMediaPost = {
    /**
     * File
     */
    file: Blob | File;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * ImageAnnotationCreate
 */
export type ImageAnnotationCreate = {
    /**
     * Points
     */
    points: Array<Array<number>>;
    /**
     * Labels
     */
    labels: Array<number>;
    /**
     * Media Id
     */
    media_id: number;
};

/**
 * ImageAnnotationRead
 */
export type ImageAnnotationRead = {
    /**
     * Points
     */
    points: Array<Array<number>>;
    /**
     * Labels
     */
    labels: Array<number>;
    /**
     * Media Id
     */
    media_id: number;
    /**
     * Id
     */
    id: number;
};

/**
 * MediaRead
 */
export type MediaRead = {
    /**
     * Id
     */
    id: number;
    /**
     * Path
     */
    path: string;
    /**
     * Media Type
     */
    media_type: 'image' | 'video';
    /**
     * Height
     */
    height: number;
    /**
     * Width
     */
    width: number;
    /**
     * Fps
     */
    fps?: number | null;
};

/**
 * ModelCreate
 */
export type ModelCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Engine
     */
    engine?: 'torch' | 'tensorrt';
    /**
     * Compiled
     */
    compiled?: boolean;
};

/**
 * ModelRead
 */
export type ModelRead = {
    /**
     * Name
     */
    name: string;
    /**
     * Engine
     */
    engine?: 'torch' | 'tensorrt';
    /**
     * Compiled
     */
    compiled?: boolean;
    /**
     * Id
     */
    id: number;
    /**
     * Path
     */
    path: string | null;
};

/**
 * ProjectCreate
 */
export type ProjectCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Media Type
     */
    media_type: 'image' | 'video';
};

/**
 * ProjectRead
 */
export type ProjectRead = {
    /**
     * Name
     */
    name: string;
    /**
     * Media Type
     */
    media_type: 'image' | 'video';
    /**
     * Id
     */
    id: number;
    /**
     * Default Model Id
     */
    default_model_id?: number | null;
};

/**
 * ProjectUpdate
 */
export type ProjectUpdate = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Default Model Id
     */
    default_model_id?: number | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

/**
 * VideoAnnotationCreate
 */
export type VideoAnnotationCreate = {
    /**
     * Points
     */
    points: Array<Array<number>>;
    /**
     * Labels
     */
    labels: Array<number>;
    /**
     * Media Id
     */
    media_id: number;
    /**
     * Frame Idx
     */
    frame_idx: number;
    /**
     * Obj Idx
     */
    obj_idx: number;
};

/**
 * VideoAnnotationRead
 */
export type VideoAnnotationRead = {
    /**
     * Points
     */
    points: Array<Array<number>>;
    /**
     * Labels
     */
    labels: Array<number>;
    /**
     * Media Id
     */
    media_id: number;
    /**
     * Frame Idx
     */
    frame_idx: number;
    /**
     * Obj Idx
     */
    obj_idx: number;
    /**
     * Id
     */
    id: number;
};

export type ListProjectsApiV1ProjectsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/projects';
};

export type ListProjectsApiV1ProjectsGetResponses = {
    /**
     * Response List Projects Api V1 Projects Get
     * Successful Response
     */
    200: Array<ProjectRead>;
};

export type ListProjectsApiV1ProjectsGetResponse = ListProjectsApiV1ProjectsGetResponses[keyof ListProjectsApiV1ProjectsGetResponses];

export type CreateProjectApiV1ProjectsPostData = {
    body: ProjectCreate;
    path?: never;
    query?: never;
    url: '/api/v1/projects';
};

export type CreateProjectApiV1ProjectsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateProjectApiV1ProjectsPostError = CreateProjectApiV1ProjectsPostErrors[keyof CreateProjectApiV1ProjectsPostErrors];

export type CreateProjectApiV1ProjectsPostResponses = {
    /**
     * Successful Response
     */
    200: ProjectRead;
};

export type CreateProjectApiV1ProjectsPostResponse = CreateProjectApiV1ProjectsPostResponses[keyof CreateProjectApiV1ProjectsPostResponses];

export type DeleteProjectApiV1ProjectsPidDeleteData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}';
};

export type DeleteProjectApiV1ProjectsPidDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteProjectApiV1ProjectsPidDeleteError = DeleteProjectApiV1ProjectsPidDeleteErrors[keyof DeleteProjectApiV1ProjectsPidDeleteErrors];

export type DeleteProjectApiV1ProjectsPidDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteProjectApiV1ProjectsPidDeleteResponse = DeleteProjectApiV1ProjectsPidDeleteResponses[keyof DeleteProjectApiV1ProjectsPidDeleteResponses];

export type GetProjectApiV1ProjectsPidGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}';
};

export type GetProjectApiV1ProjectsPidGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetProjectApiV1ProjectsPidGetError = GetProjectApiV1ProjectsPidGetErrors[keyof GetProjectApiV1ProjectsPidGetErrors];

export type GetProjectApiV1ProjectsPidGetResponses = {
    /**
     * Successful Response
     */
    200: ProjectRead;
};

export type GetProjectApiV1ProjectsPidGetResponse = GetProjectApiV1ProjectsPidGetResponses[keyof GetProjectApiV1ProjectsPidGetResponses];

export type UpdateProjectApiV1ProjectsPidPatchData = {
    body: ProjectUpdate;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}';
};

export type UpdateProjectApiV1ProjectsPidPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateProjectApiV1ProjectsPidPatchError = UpdateProjectApiV1ProjectsPidPatchErrors[keyof UpdateProjectApiV1ProjectsPidPatchErrors];

export type UpdateProjectApiV1ProjectsPidPatchResponses = {
    /**
     * Successful Response
     */
    200: ProjectRead;
};

export type UpdateProjectApiV1ProjectsPidPatchResponse = UpdateProjectApiV1ProjectsPidPatchResponses[keyof UpdateProjectApiV1ProjectsPidPatchResponses];

export type ListMediaApiV1ProjectsPidMediaGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/media';
};

export type ListMediaApiV1ProjectsPidMediaGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListMediaApiV1ProjectsPidMediaGetError = ListMediaApiV1ProjectsPidMediaGetErrors[keyof ListMediaApiV1ProjectsPidMediaGetErrors];

export type ListMediaApiV1ProjectsPidMediaGetResponses = {
    /**
     * Response List Media Api V1 Projects  Pid  Media Get
     * Successful Response
     */
    200: Array<MediaRead>;
};

export type ListMediaApiV1ProjectsPidMediaGetResponse = ListMediaApiV1ProjectsPidMediaGetResponses[keyof ListMediaApiV1ProjectsPidMediaGetResponses];

export type AddMediaApiV1ProjectsPidMediaPostData = {
    body: BodyAddMediaApiV1ProjectsPidMediaPost;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/media';
};

export type AddMediaApiV1ProjectsPidMediaPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddMediaApiV1ProjectsPidMediaPostError = AddMediaApiV1ProjectsPidMediaPostErrors[keyof AddMediaApiV1ProjectsPidMediaPostErrors];

export type AddMediaApiV1ProjectsPidMediaPostResponses = {
    /**
     * Successful Response
     */
    200: MediaRead;
};

export type AddMediaApiV1ProjectsPidMediaPostResponse = AddMediaApiV1ProjectsPidMediaPostResponses[keyof AddMediaApiV1ProjectsPidMediaPostResponses];

export type DeleteMediaApiV1ProjectsPidMediaMidDeleteData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
        /**
         * Mid
         */
        mid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/media/{mid}';
};

export type DeleteMediaApiV1ProjectsPidMediaMidDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteMediaApiV1ProjectsPidMediaMidDeleteError = DeleteMediaApiV1ProjectsPidMediaMidDeleteErrors[keyof DeleteMediaApiV1ProjectsPidMediaMidDeleteErrors];

export type DeleteMediaApiV1ProjectsPidMediaMidDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteMediaApiV1ProjectsPidMediaMidDeleteResponse = DeleteMediaApiV1ProjectsPidMediaMidDeleteResponses[keyof DeleteMediaApiV1ProjectsPidMediaMidDeleteResponses];

export type GetMediaApiV1ProjectsPidMediaMidGetData = {
    body?: never;
    path: {
        /**
         * Mid
         */
        mid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/media/{mid}';
};

export type GetMediaApiV1ProjectsPidMediaMidGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMediaApiV1ProjectsPidMediaMidGetError = GetMediaApiV1ProjectsPidMediaMidGetErrors[keyof GetMediaApiV1ProjectsPidMediaMidGetErrors];

export type GetMediaApiV1ProjectsPidMediaMidGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ListApiV1ProjectsPidModelsGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/models';
};

export type ListApiV1ProjectsPidModelsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListApiV1ProjectsPidModelsGetError = ListApiV1ProjectsPidModelsGetErrors[keyof ListApiV1ProjectsPidModelsGetErrors];

export type ListApiV1ProjectsPidModelsGetResponses = {
    /**
     * Response List  Api V1 Projects  Pid  Models Get
     * Successful Response
     */
    200: Array<ModelRead>;
};

export type ListApiV1ProjectsPidModelsGetResponse = ListApiV1ProjectsPidModelsGetResponses[keyof ListApiV1ProjectsPidModelsGetResponses];

export type AddApiV1ProjectsPidModelsPostData = {
    body: ModelCreate;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/models';
};

export type AddApiV1ProjectsPidModelsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddApiV1ProjectsPidModelsPostError = AddApiV1ProjectsPidModelsPostErrors[keyof AddApiV1ProjectsPidModelsPostErrors];

export type AddApiV1ProjectsPidModelsPostResponses = {
    /**
     * Successful Response
     */
    200: ModelRead;
};

export type AddApiV1ProjectsPidModelsPostResponse = AddApiV1ProjectsPidModelsPostResponses[keyof AddApiV1ProjectsPidModelsPostResponses];

export type RemoveApiV1ProjectsPidModelsMidDeleteData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
        /**
         * Mid
         */
        mid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/models/{mid}';
};

export type RemoveApiV1ProjectsPidModelsMidDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RemoveApiV1ProjectsPidModelsMidDeleteError = RemoveApiV1ProjectsPidModelsMidDeleteErrors[keyof RemoveApiV1ProjectsPidModelsMidDeleteErrors];

export type RemoveApiV1ProjectsPidModelsMidDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type RemoveApiV1ProjectsPidModelsMidDeleteResponse = RemoveApiV1ProjectsPidModelsMidDeleteResponses[keyof RemoveApiV1ProjectsPidModelsMidDeleteResponses];

export type PatchApiV1ProjectsPidModelsMidPatchData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
        /**
         * Mid
         */
        mid: number;
    };
    query?: {
        /**
         * Compiled
         */
        compiled?: boolean | null;
    };
    url: '/api/v1/projects/{pid}/models/{mid}';
};

export type PatchApiV1ProjectsPidModelsMidPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PatchApiV1ProjectsPidModelsMidPatchError = PatchApiV1ProjectsPidModelsMidPatchErrors[keyof PatchApiV1ProjectsPidModelsMidPatchErrors];

export type PatchApiV1ProjectsPidModelsMidPatchResponses = {
    /**
     * Successful Response
     */
    200: ModelRead;
};

export type PatchApiV1ProjectsPidModelsMidPatchResponse = PatchApiV1ProjectsPidModelsMidPatchResponses[keyof PatchApiV1ProjectsPidModelsMidPatchResponses];

export type ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: {
        /**
         * Media Id
         * Filter by media_id
         */
        media_id?: number | null;
    };
    url: '/api/v1/projects/{pid}/annotations/image';
};

export type ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetError = ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetErrors[keyof ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetErrors];

export type ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetResponses = {
    /**
     * Response List Image Annotations Api V1 Projects  Pid  Annotations Image Get
     * Successful Response
     */
    200: Array<ImageAnnotationRead>;
};

export type ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetResponse = ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetResponses[keyof ListImageAnnotationsApiV1ProjectsPidAnnotationsImageGetResponses];

export type AddImageAnnotationApiV1ProjectsPidAnnotationsImagePostData = {
    body: ImageAnnotationCreate;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/annotations/image';
};

export type AddImageAnnotationApiV1ProjectsPidAnnotationsImagePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddImageAnnotationApiV1ProjectsPidAnnotationsImagePostError = AddImageAnnotationApiV1ProjectsPidAnnotationsImagePostErrors[keyof AddImageAnnotationApiV1ProjectsPidAnnotationsImagePostErrors];

export type AddImageAnnotationApiV1ProjectsPidAnnotationsImagePostResponses = {
    /**
     * Successful Response
     */
    200: ImageAnnotationRead;
};

export type AddImageAnnotationApiV1ProjectsPidAnnotationsImagePostResponse = AddImageAnnotationApiV1ProjectsPidAnnotationsImagePostResponses[keyof AddImageAnnotationApiV1ProjectsPidAnnotationsImagePostResponses];

export type DeleteImageAnnotationApiV1ProjectsPidAnnotationsImageAidDeleteData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
        /**
         * Aid
         */
        aid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/annotations/image/{aid}';
};

export type DeleteImageAnnotationApiV1ProjectsPidAnnotationsImageAidDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteImageAnnotationApiV1ProjectsPidAnnotationsImageAidDeleteError = DeleteImageAnnotationApiV1ProjectsPidAnnotationsImageAidDeleteErrors[keyof DeleteImageAnnotationApiV1ProjectsPidAnnotationsImageAidDeleteErrors];

export type DeleteImageAnnotationApiV1ProjectsPidAnnotationsImageAidDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteImageAnnotationApiV1ProjectsPidAnnotationsImageAidDeleteResponse = DeleteImageAnnotationApiV1ProjectsPidAnnotationsImageAidDeleteResponses[keyof DeleteImageAnnotationApiV1ProjectsPidAnnotationsImageAidDeleteResponses];

export type ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: {
        /**
         * Media Id
         */
        media_id?: number | null;
        /**
         * Obj Idx
         */
        obj_idx?: number | null;
        /**
         * Frame Idx
         */
        frame_idx?: number | null;
    };
    url: '/api/v1/projects/{pid}/annotations/video';
};

export type ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetError = ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetErrors[keyof ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetErrors];

export type ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetResponses = {
    /**
     * Response List Video Annotations Api V1 Projects  Pid  Annotations Video Get
     * Successful Response
     */
    200: Array<VideoAnnotationRead>;
};

export type ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetResponse = ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetResponses[keyof ListVideoAnnotationsApiV1ProjectsPidAnnotationsVideoGetResponses];

export type AddVideoAnnotationApiV1ProjectsPidAnnotationsVideoPostData = {
    body: VideoAnnotationCreate;
    path: {
        /**
         * Pid
         */
        pid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/annotations/video';
};

export type AddVideoAnnotationApiV1ProjectsPidAnnotationsVideoPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddVideoAnnotationApiV1ProjectsPidAnnotationsVideoPostError = AddVideoAnnotationApiV1ProjectsPidAnnotationsVideoPostErrors[keyof AddVideoAnnotationApiV1ProjectsPidAnnotationsVideoPostErrors];

export type AddVideoAnnotationApiV1ProjectsPidAnnotationsVideoPostResponses = {
    /**
     * Successful Response
     */
    200: VideoAnnotationRead;
};

export type AddVideoAnnotationApiV1ProjectsPidAnnotationsVideoPostResponse = AddVideoAnnotationApiV1ProjectsPidAnnotationsVideoPostResponses[keyof AddVideoAnnotationApiV1ProjectsPidAnnotationsVideoPostResponses];

export type DeleteVideoAnnotationApiV1ProjectsPidAnnotationsVideoAidDeleteData = {
    body?: never;
    path: {
        /**
         * Pid
         */
        pid: number;
        /**
         * Aid
         */
        aid: number;
    };
    query?: never;
    url: '/api/v1/projects/{pid}/annotations/video/{aid}';
};

export type DeleteVideoAnnotationApiV1ProjectsPidAnnotationsVideoAidDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteVideoAnnotationApiV1ProjectsPidAnnotationsVideoAidDeleteError = DeleteVideoAnnotationApiV1ProjectsPidAnnotationsVideoAidDeleteErrors[keyof DeleteVideoAnnotationApiV1ProjectsPidAnnotationsVideoAidDeleteErrors];

export type DeleteVideoAnnotationApiV1ProjectsPidAnnotationsVideoAidDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteVideoAnnotationApiV1ProjectsPidAnnotationsVideoAidDeleteResponse = DeleteVideoAnnotationApiV1ProjectsPidAnnotationsVideoAidDeleteResponses[keyof DeleteVideoAnnotationApiV1ProjectsPidAnnotationsVideoAidDeleteResponses];

export type ClientOptions = {
    baseUrl: `${string}://static` | (string & {});
};